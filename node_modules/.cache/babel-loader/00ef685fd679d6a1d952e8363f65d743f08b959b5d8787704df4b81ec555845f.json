{"ast":null,"code":"var _jsxFileName = \"/Users/saripagurekvanmossel/Documents/CS/React/tasklist/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from \"react\";\n\n// Example of a data array that\n// you might receive from an API\n\n//const data = window.truthTable(\"A|B\")\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction makeData() {\n  //return [\n  //{ name: window.test(), age: 19, gender: \"Male\" },\n  //{ name: \"Megha\", age: 19, gender: \"Female\" },\n  //{ name: \"Subham\", age: 25, gender: \"Male\"},\n  //]\n  return {\n    'A': [false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true],\n    'B': [false, false, false, false, true, true, true, true, false, false, false, false, true, true, true, true],\n    'C': [false, false, true, true, false, false, true, true, false, false, true, true, false, false, true, true],\n    'D': [false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true],\n    'A|B': [false],\n    'C|D': [false],\n    '(A|B)|(C|D)': [false]\n  };\n}\nfunction App() {\n  _s();\n  const [data, setData] = React.useState([]);\n  React.useEffect(function () {\n    window.brythonReady = function () {\n      setData(makeData());\n      console.log('something');\n    };\n  }, []);\n  const numRows = data[Object.keys(data)[0]].length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(data).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\n\n/*\nimport React from \"react\";\nimport \"./App.css\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst data = [\n  { name: \"Anom\", age: 19, gender: \"Male\" },\n  { name: \"Megha\", age: 19, gender: \"Female\" },\n  { name: \"Subham\", age: 25, gender: \"Male\"},\n]\n\n\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      \n    >\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n      <div>\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label><b>Add a Task</b></Form.Label>\n      <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new task\" />\n    </Form.Group>\n    <Button style={{marginLeft: 0}} className=\"buttonStyle\" type=\"submit\">\n      Add\n    </Button>\n    <Button className=\"buttonStyle\">Click Me!</Button>\n  </Form>\n  );\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Age</th>\n          <th>Gender</th>\n        </tr>\n        {data.map((val, key) => {\n          return (\n            <tr key={key}>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.gender}</td>\n            </tr>\n          )\n        })}\n      </table>\n    </div>\n  );\n  \n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is my first task!\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Task List</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","makeData","App","data","setData","useState","useEffect","window","brythonReady","console","log","numRows","Object","keys","length","map","key"],"sources":["/Users/saripagurekvanmossel/Documents/CS/React/tasklist/src/App.js"],"sourcesContent":["import './App.css';\nimport React from \"react\";\n\n// Example of a data array that\n// you might receive from an API\n\n//const data = window.truthTable(\"A|B\")\n\nfunction makeData() {\n  //return [\n    //{ name: window.test(), age: 19, gender: \"Male\" },\n    //{ name: \"Megha\", age: 19, gender: \"Female\" },\n    //{ name: \"Subham\", age: 25, gender: \"Male\"},\n  //]\n  return {'A': [false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true], 'B': [false, false, false, false, true, true, true, true, false, false, false, false, true, true, true, true], 'C': [false, false, true, true, false, false, true, true, false, false, true, true, false, false, true, true], 'D': [false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true], 'A|B': [false], 'C|D': [false], '(A|B)|(C|D)': [false]}\n}\n\n\n  \nfunction App() {\n  const [data, setData] = React.useState([])\n  React.useEffect(function() {\n    window.brythonReady = function () {\n      setData(makeData())\n      console.log('something')\n    }\n  }, [])\n  const numRows = data[Object.keys(data)[0]].length\n  return (\n    <div className=\"App\">\n      <table>\n        <tr>\n          {Object.keys(data).map((key) => <td>{key}</td>)}\n        </tr>\n        {/*data.map((val, key) => {\n          return (\n            <tr key={key}>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.gender}</td>\n            </tr>\n          )\n        })*/}\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nimport React from \"react\";\nimport \"./App.css\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst data = [\n  { name: \"Anom\", age: 19, gender: \"Male\" },\n  { name: \"Megha\", age: 19, gender: \"Female\" },\n  { name: \"Subham\", age: 25, gender: \"Male\"},\n]\n\n\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      \n    >\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n      <div>\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label><b>Add a Task</b></Form.Label>\n      <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new task\" />\n    </Form.Group>\n    <Button style={{marginLeft: 0}} className=\"buttonStyle\" type=\"submit\">\n      Add\n    </Button>\n    <Button className=\"buttonStyle\">Click Me!</Button>\n  </Form>\n  );\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Age</th>\n          <th>Gender</th>\n        </tr>\n        {data.map((val, key) => {\n          return (\n            <tr key={key}>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.gender}</td>\n            </tr>\n          )\n        })}\n      </table>\n    </div>\n  );\n  \n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is my first task!\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Task List</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;\n*/"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AAAA;AAEA,SAASC,QAAQ,GAAG;EAClB;EACE;EACA;EACA;EACF;EACA,OAAO;IAAC,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAAE,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAAE,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;IAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;IAAE,KAAK,EAAE,CAAC,KAAK,CAAC;IAAE,KAAK,EAAE,CAAC,KAAK,CAAC;IAAE,aAAa,EAAE,CAAC,KAAK;EAAC,CAAC;AAC7f;AAIA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,EAAE,CAAC;EAC1CL,KAAK,CAACM,SAAS,CAAC,YAAW;IACzBC,MAAM,CAACC,YAAY,GAAG,YAAY;MAChCJ,OAAO,CAACH,QAAQ,EAAE,CAAC;MACnBQ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,OAAO,GAAGR,IAAI,CAACS,MAAM,CAACC,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAACW,MAAM;EACjD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAA,uBACE;QAAA,UACGF,MAAM,CAACC,IAAI,CAACV,IAAI,CAAC,CAACY,GAAG,CAAEC,GAAG,iBAAK;UAAA,UAAKA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAM;MAAC;QAAA;QAAA;QAAA;MAAA;IAC5C;MAAA;MAAA;MAAA;IAAA;EAUC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GA3BQd,GAAG;AAAA,KAAHA,GAAG;AA6BZ,eAAeA,GAAG;;AAEl},"metadata":{},"sourceType":"module","externalDependencies":[]}