{"ast":null,"code":"var _jsxFileName = \"/Users/saripagurekvanmossel/Documents/CS/React/tasklist/src/App.js\";\nimport './App.css';\n\n// Example of a data array that\n// you might receive from an API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = truthTable(\"A|B\");\n/*\nconst data = [\n  { name: \"Anom\", age: 19, gender: \"Male\" },\n  { name: \"Megha\", age: 19, gender: \"Female\" },\n  { name: \"Subham\", age: 25, gender: \"Male\"},\n]\n*/\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), data.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n/*\nimport React from \"react\";\nimport \"./App.css\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst data = [\n  { name: \"Anom\", age: 19, gender: \"Male\" },\n  { name: \"Megha\", age: 19, gender: \"Female\" },\n  { name: \"Subham\", age: 25, gender: \"Male\"},\n]\n\n\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      \n    >\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n      <div>\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label><b>Add a Task</b></Form.Label>\n      <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new task\" />\n    </Form.Group>\n    <Button style={{marginLeft: 0}} className=\"buttonStyle\" type=\"submit\">\n      Add\n    </Button>\n    <Button className=\"buttonStyle\">Click Me!</Button>\n  </Form>\n  );\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Age</th>\n          <th>Gender</th>\n        </tr>\n        {data.map((val, key) => {\n          return (\n            <tr key={key}>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.gender}</td>\n            </tr>\n          )\n        })}\n      </table>\n    </div>\n  );\n  \n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is my first task!\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Task List</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","truthTable","App","map","val","key","name","age","gender"],"sources":["/Users/saripagurekvanmossel/Documents/CS/React/tasklist/src/App.js"],"sourcesContent":["import './App.css';\n\n// Example of a data array that\n// you might receive from an API\n\nconst data = truthTable(\"A|B\")\n/*\nconst data = [\n  { name: \"Anom\", age: 19, gender: \"Male\" },\n  { name: \"Megha\", age: 19, gender: \"Female\" },\n  { name: \"Subham\", age: 25, gender: \"Male\"},\n]\n*/\n  \nfunction App() {\n  return (\n    <div className=\"App\">\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Age</th>\n          <th>Gender</th>\n        </tr>\n        {data.map((val, key) => {\n          return (\n            <tr key={key}>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.gender}</td>\n            </tr>\n          )\n        })}\n      </table>\n    </div>\n  );\n}\n  \nexport default App;\n\n/*\nimport React from \"react\";\nimport \"./App.css\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst data = [\n  { name: \"Anom\", age: 19, gender: \"Male\" },\n  { name: \"Megha\", age: 19, gender: \"Female\" },\n  { name: \"Subham\", age: 25, gender: \"Male\"},\n]\n\n\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      \n    >\n      <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" }}>{todo.text}</span>\n      <div>\n        <Button variant=\"outline-success\" onClick={() => markTodo(index)}>✓</Button>{' '}\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(index)}>✕</Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label><b>Add a Task</b></Form.Label>\n      <Form.Control type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add new task\" />\n    </Form.Group>\n    <Button style={{marginLeft: 0}} className=\"buttonStyle\" type=\"submit\">\n      Add\n    </Button>\n    <Button className=\"buttonStyle\">Click Me!</Button>\n  </Form>\n  );\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <table>\n        <tr>\n          <th>Name</th>\n          <th>Age</th>\n          <th>Gender</th>\n        </tr>\n        {data.map((val, key) => {\n          return (\n            <tr key={key}>\n              <td>{val.name}</td>\n              <td>{val.age}</td>\n              <td>{val.gender}</td>\n            </tr>\n          )\n        })}\n      </table>\n    </div>\n  );\n  \n  const [todos, setTodos] = React.useState([\n    {\n      text: \"This is my first task!\",\n      isDone: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"text-center mb-4\">Task List</h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;\n*/"],"mappings":";AAAA,OAAO,WAAW;;AAElB;AACA;AAAA;AAEA,MAAMA,IAAI,GAAGC,UAAU,CAAC,KAAK,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY,eACZ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QACZ,EACJF,IAAI,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;QACtB,oBACE;UAAA,wBACE;YAAA,UAAKD,GAAG,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACnB;YAAA,UAAKF,GAAG,CAACG;UAAG;YAAA;YAAA;YAAA;UAAA,QAAM,eAClB;YAAA,UAAKH,GAAG,CAACI;UAAM;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAHdH,GAAG;UAAA;UAAA;UAAA;QAAA,QAIP;MAET,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,KArBQH,GAAG;AAuBZ,eAAeA,GAAG;;AAEl},"metadata":{},"sourceType":"module","externalDependencies":[]}